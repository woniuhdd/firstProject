<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.trade.dao.TradePurchaseorderdetailDao">
	<resultMap type="com.trade.model.TradePurchaseorderdetail" id="BaseResultMap">
		<result property="purchaseorderdetailid" column="PURCHASEORDERDETAILID" javaType="String" />
		<result property="purchaseorderid" column="PURCHASEORDERID" javaType="String" />
		<result property="procurecatalogid" column="PROCURECATALOGID" javaType="String" />
		<result property="purchasecount" column="PURCHASECOUNT" javaType="Long" />
		<result property="purchaseprice" column="PURCHASEPRICE" javaType="BigDecimal" />
		<result property="purchaseamount" column="PURCHASEAMOUNT" javaType="BigDecimal" />
		<result property="comidPs" column="COMID_PS" javaType="String" />
		<result property="comnamePs" column="COMNAME_PS" javaType="String" />
		<result property="comidTb" column="COMID_TB" javaType="String" />
		<result property="comnameTb" column="COMNAME_TB" javaType="String" />
		<result property="comnameSc" column="COMNAME_SC" javaType="String" />
		<result property="detailstatus" column="DETAILSTATUS" javaType="String" />
		<result property="detailcontime" column="DETAILCONTIME" javaType="Date" />
		<result property="ndisreson" column="NDISRESON" javaType="String" />
		<result property="eduptime" column="EDUPTIME" javaType="Date" />
		<result property="refuseretreson" column="REFUSERETRESON" javaType="String" />
		<result property="podetailid" column="PODETAILID" javaType="String" />
		<result property="purchasedetailcontime" column="PURCHASEDETAILCONTIME" javaType="Date" />

		<result property="hosid" column="HOSID" javaType="String" />
		<result property="hosName" column="HOSPITALNAME" javaType="String" />
		<result property="purchaseordercode" column="PURCHASEORDERCODE" javaType="String" />
		<result property="remark" column="REMARK" javaType="String" />
		<result property="ordertype" column="ORDERTYPE" javaType="String" />
		<result property="submittime" column="SUBMITTIME" javaType="Date" />
		<result property="detailCount" column="detail_count" javaType="String" />
	</resultMap>

	<sql id="full-columns">
		t.PURCHASEORDERDETAILID,
		t.PURCHASEORDERID,
		t.PROCURECATALOGID,
		t.PURCHASECOUNT,
		t.PURCHASEPRICE,
		t.PURCHASEAMOUNT,
		t.COMID_PS,
		t.COMNAME_PS,
		t.COMID_TB,
		t.COMNAME_TB,
		t.COMNAME_SC,
		t.DETAILSTATUS,
		t.DETAILCONTIME,
		t.NDISRESON,
		t.EDUPTIME,
		t.REFUSERETRESON,
		t.PODETAILID,
		t.PURCHASEDETAILCONTIME
	</sql>
	
	<sql id="common_where_if">
			<if test="@com.OGNL@isNotEmpty(purchaseorderdetailid)">
				AND t.PURCHASEORDERDETAILID = #{purchaseorderdetailid}
			</if>
			<if test="@com.OGNL@isNotEmpty(purchaseorderid)">
				AND t.PURCHASEORDERID = #{purchaseorderid}
			</if>
			<if test="@com.OGNL@isNotEmpty(procurecatalogid)">
				AND t.PROCURECATALOGID = #{procurecatalogid}
			</if>
			<if test="@com.OGNL@isNotEmpty(purchasecount)">
				AND t.PURCHASECOUNT = #{purchasecount}
			</if>
			<if test="@com.OGNL@isNotEmpty(purchaseprice)">
				AND t.PURCHASEPRICE = #{purchaseprice}
			</if>
			<if test="@com.OGNL@isNotEmpty(purchaseamount)">
				AND t.PURCHASEAMOUNT = #{purchaseamount}
			</if>
			<if test="@com.OGNL@isNotEmpty(comidPs)">
				AND t.COMID_PS = #{comidPs}
			</if>
			<if test="@com.OGNL@isNotEmpty(comnamePs)">
				AND t.COMNAME_PS = #{comnamePs}
			</if>
			<if test="@com.OGNL@isNotEmpty(comidTb)">
				AND t.COMID_TB = #{comidTb}
			</if>
			<if test="@com.OGNL@isNotEmpty(comnameTb)">
				AND t.COMNAME_TB = #{comnameTb}
			</if>
			<if test="@com.OGNL@isNotEmpty(comnameSc)">
				AND t.COMNAME_SC = #{comnameSc}
			</if>
			<if test="@com.OGNL@isNotEmpty(detailstatus)">
				AND t.DETAILSTATUS = #{detailstatus}
			</if>
			<if test="@com.OGNL@isNotEmpty(detailcontime)">
				AND t.DETAILCONTIME = #{detailcontime}
			</if>
			<if test="@com.OGNL@isNotEmpty(ndisreson)">
				AND t.NDISRESON = #{ndisreson}
			</if>
			<if test="@com.OGNL@isNotEmpty(eduptime)">
				AND t.EDUPTIME = #{eduptime}
			</if>
			<if test="@com.OGNL@isNotEmpty(refuseretreson)">
				AND t.REFUSERETRESON = #{refuseretreson}
			</if>
			<if test="@com.OGNL@isNotEmpty(podetailid)">
				AND t.PODETAILID = #{podetailid}
			</if>
			<if test="@com.OGNL@isNotEmpty(purchasedetailcontime)">
				AND t.PURCHASEDETAILCONTIME = #{purchasedetailcontime}
			</if>
	</sql>

	<select id="getById" parameterType="java.lang.String"
			resultMap="BaseResultMap">
		SELECT
		<include refid="full-columns" />
		FROM TRADE_PURCHASEORDERDETAIL t
		WHERE t.PURCHASEORDERDETAILID = #{value}
	</select>

	<select id="countByParams" parameterType="map" resultType="int">
		SELECT count(*)
		FROM TRADE_PURCHASEORDERDETAIL t
		<where>
			<include refid="common_where_if"/>
		</where>
	</select>

	<select id="getListByParams" parameterType="map" resultMap="BaseResultMap">
		SELECT
		<include refid="full-columns" />
		FROM TRADE_PURCHASEORDERDETAIL t
		<where>
			<include refid="common_where_if"/>
		</where>
	</select>

	<insert id="save" parameterType="com.trade.model.TradePurchaseorderdetail">
		INSERT INTO TRADE_PURCHASEORDERDETAIL(
		PURCHASEORDERDETAILID ,
		PURCHASEORDERID ,
		PROCURECATALOGID ,
		PURCHASECOUNT ,
		PURCHASEPRICE ,
		PURCHASEAMOUNT ,
		COMID_PS ,
		COMNAME_PS ,
		COMID_TB ,
		COMNAME_TB ,
		COMNAME_SC ,
		DETAILSTATUS ,
		DETAILCONTIME ,
		NDISRESON ,
		EDUPTIME ,
		REFUSERETRESON ,
		PODETAILID ,
		PURCHASEDETAILCONTIME 
		)
		VALUES (
		#{purchaseorderdetailid} ,
		#{purchaseorderid} ,
		#{procurecatalogid} ,
		#{purchasecount} ,
		#{purchaseprice} ,
		#{purchaseamount} ,
		#{comidPs} ,
		#{comnamePs} ,
		#{comidTb} ,
		#{comnameTb} ,
		#{comnameSc} ,
		#{detailstatus} ,
		#{detailcontime} ,
		#{ndisreson} ,
		#{eduptime} ,
		#{refuseretreson} ,
		#{podetailid} ,
		#{purchasedetailcontime} 
		)
	</insert>

	<insert id="saveBatch" parameterType="java.util.List">
		INSERT INTO TRADE_PURCHASEORDERDETAIL (
		PURCHASEORDERDETAILID ,
		PURCHASEORDERID ,
		PROCURECATALOGID ,
		PURCHASECOUNT ,
		PURCHASEPRICE ,
		PURCHASEAMOUNT ,
		COMID_PS ,
		COMNAME_PS ,
		COMID_TB ,
		COMNAME_TB ,
		COMNAME_SC ,
		DETAILSTATUS ,
		DETAILCONTIME ,
		NDISRESON ,
		EDUPTIME ,
		REFUSERETRESON ,
		PODETAILID ,
		PURCHASEDETAILCONTIME 
		) VALUES
		<foreach collection="list" item="item" index="index"
			separator=",">
			(
			#{item.purchaseorderdetailid},
			#{item.purchaseorderid},
			#{item.procurecatalogid},
			#{item.purchasecount},
			#{item.purchaseprice},
			#{item.purchaseamount},
			#{item.comidPs},
			#{item.comnamePs},
			#{item.comidTb},
			#{item.comnameTb},
			#{item.comnameSc},
			#{item.detailstatus},
			#{item.detailcontime},
			#{item.ndisreson},
			#{item.eduptime},
			#{item.refuseretreson},
			#{item.podetailid},
			#{item.purchasedetailcontime}
			)
		</foreach>
	</insert>

	<update id="updateById" parameterType="com.trade.model.TradePurchaseorderdetail">
		UPDATE TRADE_PURCHASEORDERDETAIL
		<set>
			PURCHASEORDERID =
			#{purchaseorderid},
			PROCURECATALOGID =
			#{procurecatalogid},
			PURCHASECOUNT =
			#{purchasecount},
			PURCHASEPRICE =
			#{purchaseprice},
			PURCHASEAMOUNT =
			#{purchaseamount},
			COMID_PS =
			#{comidPs},
			COMNAME_PS =
			#{comnamePs},
			COMID_TB =
			#{comidTb},
			COMNAME_TB =
			#{comnameTb},
			COMNAME_SC =
			#{comnameSc},
			DETAILSTATUS =
			#{detailstatus},
			DETAILCONTIME =
			#{detailcontime},
			NDISRESON =
			#{ndisreson},
			EDUPTIME =
			#{eduptime},
			REFUSERETRESON =
			#{refuseretreson},
			PODETAILID =
			#{podetailid},
			PURCHASEDETAILCONTIME =
			#{purchasedetailcontime},
		</set>
		WHERE PURCHASEORDERDETAILID =
		#{purchaseorderdetailid}
	</update>

	<update id="updateBySelective" parameterType="com.trade.model.TradePurchaseorderdetail">
		UPDATE TRADE_PURCHASEORDERDETAIL
		<set>
			<if test="@com.OGNL@isNotEmpty(purchaseorderid)">
				PURCHASEORDERID =
				#{purchaseorderid},
			</if>
			<if test="@com.OGNL@isNotEmpty(procurecatalogid)">
				PROCURECATALOGID =
				#{procurecatalogid},
			</if>
			<if test="@com.OGNL@isNotEmpty(purchasecount)">
				PURCHASECOUNT =
				#{purchasecount},
			</if>
			<if test="@com.OGNL@isNotEmpty(purchaseprice)">
				PURCHASEPRICE =
				#{purchaseprice},
			</if>
			<if test="@com.OGNL@isNotEmpty(purchaseamount)">
				PURCHASEAMOUNT =
				#{purchaseamount},
			</if>
			<if test="@com.OGNL@isNotEmpty(comidPs)">
				COMID_PS =
				#{comidPs},
			</if>
			<if test="@com.OGNL@isNotEmpty(comnamePs)">
				COMNAME_PS =
				#{comnamePs},
			</if>
			<if test="@com.OGNL@isNotEmpty(comidTb)">
				COMID_TB =
				#{comidTb},
			</if>
			<if test="@com.OGNL@isNotEmpty(comnameTb)">
				COMNAME_TB =
				#{comnameTb},
			</if>
			<if test="@com.OGNL@isNotEmpty(comnameSc)">
				COMNAME_SC =
				#{comnameSc},
			</if>
			<if test="@com.OGNL@isNotEmpty(detailstatus)">
				DETAILSTATUS =
				#{detailstatus},
			</if>
			<if test="@com.OGNL@isNotEmpty(detailcontime)">
				DETAILCONTIME =
				#{detailcontime},
			</if>
			<if test="@com.OGNL@isNotEmpty(ndisreson)">
				NDISRESON =
				#{ndisreson},
			</if>
			<if test="@com.OGNL@isNotEmpty(eduptime)">
				EDUPTIME =
				#{eduptime},
			</if>
			<if test="@com.OGNL@isNotEmpty(refuseretreson)">
				REFUSERETRESON =
				#{refuseretreson},
			</if>
			<if test="@com.OGNL@isNotEmpty(podetailid)">
				PODETAILID =
				#{podetailid},
			</if>
			<if test="@com.OGNL@isNotEmpty(purchasedetailcontime)">
				PURCHASEDETAILCONTIME =
				#{purchasedetailcontime},
			</if>
		</set>
		WHERE PURCHASEORDERDETAILID =
		#{purchaseorderdetailid}
	</update>

	<delete id="deleteById" parameterType="java.lang.String">
		DELETE FROM
		TRADE_PURCHASEORDERDETAIL WHERE PURCHASEORDERDETAILID = #{value}
	</delete>

	<select id="queryAllOrderDetailRecentForInterface" parameterType="map" resultMap="BaseResultMap">
		SELECT <include refid="full-columns" />,o.HOSID, o.PURCHASEORDERCODE, o.REMARK, o.ORDERTYPE, o.SUBMITTIME,
		tab_count.TOTALCOUNT detail_count,h.HOSPITALNAME
		FROM TRADE_PURCHASEORDERDETAIL t
		inner join TRADE_PURCHASEORDER o on t.PURCHASEORDERID = o.PURCHASEORDERID
		left join (select  a.PURCHASEORDERID,count(*) TOTALCOUNT
		from TRADE_PURCHASEORDER a INNER join
		TRADE_PURCHASEORDERDETAIL b on b.PURCHASEORDERID=a.PURCHASEORDERID
		where b.COMID_PS IN
		<foreach collection="delCompCode" item="item" open="(" separator="," close=")">
			#{item}
		</foreach>
		GROUP BY  a.PURCHASEORDERID
		) tab_count on tab_count.PURCHASEORDERID= o.PURCHASEORDERID
		left join trade_hos h on  h.id=o.HOSID
		<where>
			<if test="@com.OGNL@isNotEmpty(delCompCode)">
				AND t.COMID_PS IN
				<foreach collection="delCompCode" item="item" open="(" separator="," close=")">
					#{item}
				</foreach>
			</if>
			<if test="@com.OGNL@isNotEmpty(startTime)">
				AND o.SUBMITTIME >= #{startTime}
			</if>
			<if test="@com.OGNL@isNotEmpty(endTime)">
				AND #{endTime} >= o.SUBMITTIME
			</if>
			<if test="@com.OGNL@isNotEmpty(orderStatuses)">
				AND o.ORDERSTATUS = #{orderStatuses}
			</if>
		</where>
		ORDER BY o.SUBMITTIME,t.PURCHASEORDERDETAILID DESC
	</select>

	<!--C005 配送订单验证订单明细状态-->
	<select id="checkDistributeDataByInterface" parameterType="java.util.List" resultType="hashmap">
		SELECT
		a.company_Distribute_id companyDistributeId,
		a.order_detail_id orderDetailId,
		CASE WHEN b.detailstatus in(0,9) THEN 1 ELSE 0 END isCanDistribute,
		CASE WHEN b.purchaseorderdetailid IS NULL THEN 0 ELSE 1 END isExists,
		CASE WHEN c.orderendtime > sysdate THEN 0 ELSE 1 END isCanDis,
		CASE WHEN company_distribute_count - b.purchasecount > 0 THEN 1 ELSE 0 END isMorePurchaseCount,
		b.detailStatus,
		nvl(b.comid_ps,'') companyIdPs
		FROM
		<foreach collection="detailList" item="item" open="(" separator=" union all " close=")">
			SELECT #{item.companyDistributeId} company_Distribute_id,#{item.orderdetailid}
			order_detail_id,#{item.discount} company_distribute_count from dual
		</foreach>
		a
		JOIN trade_purchaseorderdetail b ON a.order_detail_id = b.purchaseorderdetailid
		inner join TRADE_PURCHASEORDER c on c.purchaseorderid=b.purchaseorderid
	</select>

	<select id="checkOrderLogIsExistsByInterface" parameterType="java.util.List" resultType="hashmap">
		SELECT
		a.companyPrimaryKey,
		CASE WHEN b.id IS not NULL THEN 0 ELSE 1 END isExists
		FROM
		<foreach collection="list" item="item" open="(" separator=" union all " close=")">
			SELECT #{item.Id} companyPrimaryKey,
			#{item.orderDetailId} orderDtailId,
			#{item.logisticsStatus} logisticsStatus
			FROM DUAL
		</foreach>
		a
		left join TRADE_ORDERLOGISTICSINFO b on b.PURCHASEORDERDETAILID = a.orderDtailId
		and b.LOGISTICSSTATUS=a.logisticsStatus
	</select>

	<insert id="addOrderLogisticsInfo" parameterType="map">
		insert into TRADE_ORDERLOGISTICSINFO
		(
		id,
		purchaseorderdetailid ,
		LogisticsStatus ,
		LogisticsTime ,
		addtime)
		<foreach collection="list" item="item"  separator=" union all ">
			select
			#{item.id} id,
			#{item.orderDetailId} orderDtailId,
			#{item.logisticsStatus} logisticsStatus,
			to_date(#{item.logisticsTime},'yyyy-mm-dd hh24:mi:ss')  logisticsTime,
			sysdate from dual
		</foreach>
	</insert>

	<select id="getCancelPurchaseOrder" parameterType="map" resultMap="BaseResultMap">
		SELECT h.HOSPITALCODE HOSID, a.POID PURCHASEORDERID, a.POCODE PURCHASEORDERCODE,MAX(a.OPERTIME)EDUPTIME
		FROM TRADE_CANCLEORDERLOG a
		LEFT JOIN TRADE_HOS h ON a.HOSID=h.ID
		where
		1=1
		<if test="@com.OGNL@isNotEmpty(startTime) and @com.OGNL@isNotEmpty(endTime)">
			AND a.opertime &gt;=TO_DATE( #{startTime},'yyyy-mm-dd hh24:mi:ss')
			AND a.opertime &lt;=TO_DATE (#{endTime},'yyyy-mm-dd hh24:mi:ss')
		</if>
		GROUP BY h.HOSPITALCODE,a.POID,a.POCODE
		ORDER BY EDUPTIME DESC
	</select>
</mapper>
